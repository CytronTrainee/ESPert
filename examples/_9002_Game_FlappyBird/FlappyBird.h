// Flappy Bird Simulator for ESPresso Lite

#ifndef _GAME_FLAPPY_BIRD_H_
#define _GAME_FLAPPY_BIRD_H_

#include "Game.h"

namespace flappyBird {
// OLED bitmaps - Image to Adafruit OLED Bitmap Converter http://www.majer.ch/lcd/adf_bitmap.php
const uint8_t backgroundBitmap[(128 * 64) / 8] PROGMEM = {0x00};

const uint8_t gameOverBitmap[(64 * 16) / 8] PROGMEM = { // gameOver.png
  0x07, 0xFB, 0x0D, 0x05, 0xE5, 0x25, 0x25, 0xFD, 0x61, 0x37,
  0x17, 0x17, 0x17, 0x17, 0xF7, 0x17, 0x17, 0x17, 0x17, 0x17,
  0x17, 0x17, 0x17, 0x37, 0x67, 0xF7, 0x1B, 0x0B, 0xCB, 0x0B,
  0x1B, 0xF7, 0x0F, 0xFF, 0xFF, 0xFF, 0x07, 0xFB, 0x0D, 0x05,
  0xE5, 0x05, 0x0D, 0xFB, 0x17, 0x17, 0x17, 0xF7, 0x17, 0x17,
  0xF7, 0x1B, 0x0B, 0xCB, 0x0B, 0x1B, 0xF7, 0x37, 0x17, 0x17,
  0x17, 0x17, 0xF7, 0x07, 0xE0, 0xDF, 0xB0, 0xA0, 0xA7, 0xA0,
  0xA0, 0xBF, 0x98, 0xB0, 0xA0, 0xA3, 0xA0, 0xA0, 0xBF, 0xA0,
  0xA0, 0xBF, 0xA0, 0xA0, 0xA0, 0xBF, 0xA0, 0xA0, 0xA0, 0x9F,
  0xB0, 0xA0, 0xA0, 0xBC, 0x84, 0xF7, 0xF0, 0xFF, 0xFF, 0xFF,
  0xE0, 0xDF, 0xB0, 0xA0, 0xA7, 0xA0, 0x90, 0xBF, 0xA0, 0xA0,
  0xA0, 0xB1, 0xD8, 0xE4, 0xDF, 0xB0, 0xA0, 0xA0, 0xBC, 0x84,
  0xBF, 0xA0, 0xA0, 0xA0, 0xBF, 0x81, 0xFD, 0xFC
};

const uint8_t gameOverMaskBitmap[(64 * 16) / 8] PROGMEM = { // gameOverMask.png
  0x07, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x07, 0x0F, 0xFF, 0xFF, 0xFF, 0x07, 0x03, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x07, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF,
  0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0xC0, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFC, 0xFC
};

const uint8_t scorePanelBitmap[(80 * 40) / 8] PROGMEM = { // scorePanel.png
  0x07, 0xFB, 0xFD, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x82, 0xF6,
  0xEE, 0xF6, 0x82, 0xFE, 0x82, 0xAA, 0xAA, 0xFE, 0x82, 0xBA,
  0xBA, 0xC6, 0xFE, 0x86, 0xDA, 0xDA, 0x86, 0xFE, 0x82, 0xBE,
  0xBE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
  0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
  0xFE, 0xB6, 0xAA, 0xAA, 0xDA, 0xFE, 0xC6, 0xBA, 0xBA, 0xFE,
  0xC6, 0xBA, 0xBA, 0xC6, 0xFE, 0x82, 0xDA, 0xDA, 0xA6, 0xFE,
  0x82, 0xAA, 0xAA, 0xFE, 0xFD, 0xFB, 0x07, 0xFF, 0xFF, 0xFF,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF,
  0xEF, 0xFF, 0xFB, 0xFF, 0xFD, 0xFF, 0xFE, 0xFF, 0xFE, 0xFF,
  0xFE, 0xFF, 0xFD, 0xFF, 0xFB, 0xFF, 0xEF, 0xBF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEA, 0xBF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xEA, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x5F, 0x5F, 0xBF,
  0xFF, 0x1F, 0x5F, 0x5F, 0xFF, 0xBF, 0x5F, 0x5F, 0xDF, 0xFF,
  0xDF, 0x1F, 0xDF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFE, 0xFF, 0xFB, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0xEF, 0xFF,
  0xEF, 0xFF, 0xF7, 0xFF, 0xFB, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFD, 0xFD, 0xFE,
  0xFF, 0xFC, 0xFD, 0xFD, 0xFF, 0xFD, 0xFD, 0xFD, 0xFE, 0xFF,
  0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF,
  0xF8, 0xF3, 0xE7, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF,
  0xCF, 0xCF, 0xCF, 0xCF, 0xE7, 0xF3, 0xF8, 0xFF, 0xFF, 0xFF
};

const uint8_t scorePanelMaskBitmap[(80 * 40) / 8] PROGMEM = { // scorePanelMask.png
  0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xF0, 0xF8, 0xFF, 0xFF, 0xFF
};

const uint8_t titleBitmap[(72 * 24) / 8] PROGMEM = { // title.png
  0x03, 0xFD, 0xFE, 0xFE, 0x76, 0x76, 0x00, 0xFE, 0xFE, 0xFE,
  0x00, 0xEF, 0xF7, 0xF7, 0x37, 0xF7, 0xF7, 0x07, 0xF7, 0xF7,
  0xF7, 0x37, 0xF7, 0xEF, 0x07, 0xF7, 0xF7, 0xF7, 0x37, 0xF7,
  0xEF, 0x03, 0xFB, 0xFB, 0xFB, 0x83, 0xFB, 0xFB, 0xFB, 0x00,
  0xFE, 0xFE, 0xFE, 0x66, 0xFE, 0xFD, 0x03, 0xDB, 0xDB, 0xDB,
  0x03, 0xEF, 0xF7, 0x77, 0x37, 0x37, 0x07, 0xEF, 0xF7, 0xF7,
  0x30, 0xFE, 0xFE, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xE0, 0xE7, 0xE7, 0xE7, 0xE0, 0xFE, 0xE0, 0xE7,
  0xE7, 0xE7, 0xE0, 0xF3, 0xE7, 0xE7, 0xE6, 0xE7, 0xE7, 0x00,
  0x3F, 0x3F, 0x3F, 0x06, 0xE7, 0xF3, 0x00, 0x3F, 0x3F, 0x3F,
  0x06, 0xE7, 0xF3, 0xF8, 0xFC, 0x01, 0x33, 0x33, 0x3F, 0x3F,
  0x9F, 0xC0, 0xE7, 0x27, 0xA7, 0xA6, 0xE7, 0xB3, 0xE0, 0xE7,
  0xE7, 0xE7, 0xE0, 0xE7, 0xE7, 0xE0, 0xFF, 0xFF, 0xF8, 0x33,
  0xE7, 0xE7, 0xE6, 0xE7, 0xE7, 0x20, 0x7F, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFA, 0xF8, 0xFF, 0xF8,
  0xFF, 0xF8, 0xFE, 0xF9, 0xFE, 0xF8, 0xFF, 0xF8, 0xFB, 0xF8,
  0xFF, 0xF8, 0xFF, 0xFA, 0xFA, 0xF9, 0xFF, 0xF8, 0xFB, 0xFF,
  0xF8, 0xFA, 0xF8, 0xFF, 0xF8, 0xFE
};

const uint8_t titleMaskBitmap[(72 * 24) / 8] PROGMEM = { // titleMask.png
  0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x0F, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x07, 0x07,
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFE, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xE0, 0xF0, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x60,
  0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7F, 0x7F, 0x18, 0x10,
  0x00, 0x60, 0x60, 0x60, 0x00, 0x00, 0x1F, 0x3F, 0x7F, 0x7F,
  0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
};

const uint8_t getReadyBitmap[(64 * 56) / 8] PROGMEM = { // getReady.png
  0x03, 0xFD, 0x06, 0x02, 0xF2, 0x12, 0x12, 0x12, 0xFE, 0x08,
  0x05, 0x65, 0x05, 0x0D, 0xFB, 0x90, 0x9E, 0x02, 0x02, 0x9E,
  0x90, 0xF7, 0x07, 0xFF, 0xFF, 0x00, 0xFE, 0x02, 0x02, 0x72,
  0x02, 0x06, 0xF9, 0x0D, 0x05, 0x65, 0x05, 0x0D, 0xFB, 0x37,
  0x1B, 0x0B, 0xCB, 0x0B, 0x0B, 0xFB, 0x33, 0x17, 0x10, 0x9E,
  0x02, 0x02, 0xFE, 0x08, 0x0B, 0x0B, 0xFB, 0x0B, 0x08, 0xFE,
  0x02, 0x02, 0xFE, 0x00, 0xF0, 0xEF, 0xD8, 0xD0, 0xD1, 0xD0,
  0xD0, 0xD0, 0xCF, 0xD8, 0xD0, 0xD0, 0xDE, 0xC2, 0xFB, 0xF0,
  0xEF, 0xD8, 0xD0, 0xD3, 0xD2, 0xDE, 0xC0, 0xFF, 0xFF, 0xC0,
  0xDF, 0xD0, 0xD0, 0xDC, 0xD0, 0xD1, 0xCF, 0xD8, 0xD0, 0xD0,
  0xDE, 0xC2, 0xEF, 0xD8, 0xD0, 0xD0, 0xD1, 0xD0, 0xD0, 0xDF,
  0xC8, 0xD0, 0xD0, 0xD3, 0xD0, 0xD0, 0xDF, 0x0C, 0x78, 0x48,
  0x41, 0x40, 0x60, 0xBF, 0xD2, 0xD2, 0xDF, 0xC0, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0x1F, 0x6F, 0x77, 0x7B, 0x7B, 0xFD, 0xFD,
  0xC5, 0xB9, 0x7D, 0x7D, 0x4B, 0x77, 0x0F, 0x7F, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x67, 0xDF, 0xB8, 0xB7, 0xB7, 0xF7,
  0xF3, 0xED, 0x6E, 0xAF, 0x6D, 0xEA, 0xF5, 0xF5, 0xF5, 0xF5,
  0xF5, 0xF9, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFB, 0x0B, 0x0B,
  0x2B, 0xEB, 0x2B, 0x0B, 0xEB, 0xAB, 0xEB, 0x0B, 0xEB, 0xAB,
  0xEB, 0x0B, 0x0B, 0x17, 0x2F, 0x5F, 0xBF, 0x7F, 0xFF, 0xFE,
  0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xC2, 0x5F, 0xDF, 0xDF, 0xC2,
  0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xBF,
  0x5F, 0x2F, 0x17, 0x0B, 0x0B, 0x2B, 0xEB, 0x2B, 0x0B, 0xEB,
  0xAB, 0xEB, 0x0B, 0xEB, 0xAB, 0xEB, 0x0B, 0x0B, 0xFB, 0x03,
  0xE0, 0xEF, 0xE8, 0xE8, 0xE8, 0xEB, 0xE8, 0xE8, 0xEB, 0xE8,
  0xEB, 0xE8, 0xEB, 0xE8, 0xE8, 0xE8, 0xE8, 0xF4, 0xFA, 0xFD,
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFB, 0xFF, 0x0F,
  0xF4, 0xF7, 0x0F, 0x7B, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFE, 0xFD, 0xFA, 0xF4, 0xE8, 0xE8, 0xE8,
  0xEB, 0xE8, 0xE8, 0xEB, 0xE8, 0xEB, 0xE8, 0xEB, 0xE8, 0xE8,
  0xE8, 0xE8, 0xEF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF1, 0xEE, 0xDC, 0x3F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3E,
  0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};

const uint8_t getReadyMaskBitmap[(64 * 56) / 8] PROGMEM = { // getReadyMask.png
  0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xF8, 0xF0,
  0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0x1F, 0x0F, 0x07, 0x03, 0x03, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x7F, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x67, 0xDF, 0xB8, 0xB0, 0xB0, 0xF0,
  0xF0, 0xE0, 0x60, 0x20, 0x60, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF, 0xFE,
  0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xC0, 0x40, 0xC0, 0xC0, 0xC0,
  0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F,
  0x1F, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0xFC,
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFB, 0xFF, 0x0F,
  0x04, 0x07, 0x0F, 0x7B, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF1, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};

static const int numberOfFrames = 3;
static const int numberOfDegrees = 5;
const uint8_t birdBitmap[numberOfFrames][numberOfDegrees][(16 * 16) / 8] PROGMEM = {
  {
    {0xFF, 0xFF, 0x1F, 0x4F, 0xB7, 0xBB, 0xBB, 0x63, 0xDD, 0xBD, 0x3D, 0xAD, 0x9B, 0x47, 0xAF, 0x4F, 0xF3, 0xEC, 0xEF, 0xEF, 0xEF, 0xCF, 0xB7, 0xB8, 0xBF, 0xDF, 0xDE, 0xED, 0xF2, 0xFB, 0xFD, 0xFE}, // bird00.png
    {0x3F, 0xDF, 0xDF, 0xCF, 0xD7, 0xB7, 0x7B, 0xFB, 0x8B, 0x73, 0xFB, 0xFB, 0x97, 0xEF, 0x1F, 0xFF, 0xFE, 0xFD, 0xF3, 0xEB, 0xEB, 0xDD, 0xDE, 0xDF, 0xDB, 0xD5, 0xEA, 0xEA, 0xEA, 0xEA, 0xF2, 0xF8}, // bird01.png
    {0xFF, 0x07, 0x7B, 0xFB, 0xFB, 0xFB, 0xE3, 0x1B, 0xFB, 0x3B, 0xD7, 0xEF, 0xEF, 0xDF, 0x3F, 0xFF, 0xFF, 0xFC, 0xFB, 0xF6, 0xEE, 0xDE, 0xDE, 0xC7, 0xD9, 0xB6, 0xAD, 0x9B, 0xB6, 0xC7, 0xF8, 0xFF}, // bird02.png
    {0xFF, 0x3F, 0xDF, 0xC1, 0xBE, 0x7E, 0x7D, 0x7D, 0x73, 0x8B, 0xF3, 0x77, 0x6F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF9, 0xF7, 0xEF, 0xCF, 0xB7, 0x6B, 0x5B, 0xA1, 0x4E, 0x17, 0xDF, 0xEF, 0xF0, 0xFF}, // bird03.png
    {0xFF, 0xFF, 0x1F, 0xE7, 0xFB, 0xE3, 0xDD, 0xBE, 0xBE, 0xDE, 0xE1, 0xF7, 0xCF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC3, 0xBD, 0x02, 0x7D, 0x03, 0xBD, 0xAE, 0xAE, 0xDE, 0xED, 0xF0, 0xFF, 0xFF}  // bird04.png
  },
  {
    {0xFF, 0x7F, 0x9F, 0xEF, 0x77, 0xBB, 0xBB, 0x23, 0xDD, 0xBD, 0x3D, 0xAD, 0x9B, 0x47, 0xAF, 0x4F, 0xFF, 0xF0, 0xED, 0xDE, 0xDF, 0xCF, 0xB3, 0xBC, 0xBF, 0xDF, 0xDE, 0xED, 0xF2, 0xFB, 0xFD, 0xFE}, // bird10.png
    {0xFF, 0x3F, 0x5F, 0x6F, 0x77, 0x77, 0xFB, 0xFB, 0x8B, 0x73, 0xFB, 0xFB, 0x97, 0xEF, 0x1F, 0xFF, 0xFC, 0xFB, 0xF3, 0xEB, 0xEB, 0xDB, 0xDC, 0xDF, 0xDB, 0xD5, 0xEA, 0xEA, 0xEA, 0xEA, 0xF2, 0xF8}, // bird11.png
    {0xFF, 0x07, 0xBB, 0x7B, 0xF7, 0xEB, 0xDB, 0x3B, 0xFB, 0x3B, 0xD7, 0xEF, 0xEF, 0xDF, 0x3F, 0xFF, 0xFF, 0xFC, 0xFB, 0xF7, 0xEE, 0xDE, 0xDE, 0xC7, 0xD9, 0xB6, 0xAD, 0x9B, 0xB6, 0xC7, 0xF8, 0xFF}, // bird12.png
    {0xFF, 0x3F, 0xC7, 0xDB, 0xBD, 0xBD, 0x79, 0x75, 0x6D, 0x1B, 0xFB, 0x77, 0x6F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF9, 0xF7, 0xEF, 0xCF, 0xB7, 0x6B, 0x5B, 0xA1, 0x4E, 0x17, 0xDF, 0xEF, 0xF0, 0xFF}, // bird13.png
    {0xFF, 0xFF, 0x1F, 0xE7, 0xFB, 0xC1, 0xBE, 0xBE, 0xC1, 0xFD, 0xFB, 0xF7, 0xCF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC3, 0xBD, 0x02, 0x7D, 0x03, 0xBD, 0xAE, 0xAE, 0xDE, 0xED, 0xF0, 0xFF, 0xFF}  // bird14.png
  },
  {
    {0xFF, 0x7F, 0x9F, 0xEF, 0xF7, 0x7B, 0xBB, 0x23, 0xDD, 0xBD, 0x3D, 0xAD, 0x9B, 0x47, 0xAF, 0x4F, 0xFF, 0xF0, 0xEB, 0xDD, 0xDE, 0xDF, 0xAF, 0xAF, 0xB0, 0xDF, 0xDE, 0xED, 0xF2, 0xFB, 0xFD, 0xFE}, // bird20.png
    {0xFF, 0x3F, 0xDF, 0xEF, 0xF7, 0xF7, 0xFB, 0xFB, 0x8B, 0x73, 0xFB, 0xFB, 0x97, 0xEF, 0x1F, 0xFF, 0xF1, 0xEE, 0xEE, 0xEE, 0xE6, 0xDA, 0xDD, 0xDF, 0xDB, 0xD5, 0xEA, 0xEA, 0xEA, 0xEA, 0xF2, 0xF8}, // bird21.png
    {0xFF, 0x1F, 0xEF, 0xF7, 0xE7, 0xDB, 0xBB, 0x7B, 0xFB, 0x3B, 0xD7, 0xEF, 0xEF, 0xDF, 0x3F, 0xFF, 0xFF, 0xFC, 0xFB, 0xF3, 0xEB, 0xDB, 0xDD, 0xC6, 0xD9, 0xB6, 0xAD, 0x9B, 0xB6, 0xC7, 0xF8, 0xFF}, // bird22.png
    {0xFF, 0x3F, 0xC7, 0x3B, 0xFD, 0xF9, 0xF5, 0xED, 0x5D, 0x3B, 0xFB, 0x77, 0x6F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF9, 0xF7, 0xEE, 0xCE, 0xB6, 0x6A, 0x5B, 0xA1, 0x4E, 0x17, 0xDF, 0xEF, 0xF0, 0xFF}, // bird23.png
    {0xFF, 0xFF, 0x1F, 0xE1, 0xEE, 0xDE, 0xBE, 0xC1, 0xFD, 0xFD, 0xFB, 0xF7, 0xCF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC3, 0xBD, 0x02, 0x7D, 0x03, 0xBD, 0xAE, 0xAE, 0xDE, 0xED, 0xF0, 0xFF, 0xFF}  // bird24.png
  }
};

const uint8_t birdMaskBitmap[numberOfFrames][numberOfDegrees][(16 * 16) / 8] PROGMEM = {
  {
    {0xFF, 0xFF, 0x1F, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x0F, 0xF3, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE}, // birdMask00.png
    {0x3F, 0x1F, 0x1F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFE, 0xFC, 0xF0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8}, // birdMask01.png
    {0xFF, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xF8, 0xFF}, // birdMask02.png
    {0xFF, 0x3F, 0x1F, 0x01, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xFF}, // birdMask03.png
    {0xFF, 0xFF, 0x1F, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xF0, 0xFF, 0xFF}  // birdMask04.png
  },
  {
    {0xFF, 0x7F, 0x1F, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x0F, 0xFF, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE}, // birdMask10.png
    {0xFF, 0x3F, 0x1F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8}, // birdMask11.png
    {0xFF, 0x07, 0x03, 0x03, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xF8, 0xFF}, // birdMask12.png
    {0xFF, 0x3F, 0x07, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xFF}, // birdMask13.png
    {0xFF, 0xFF, 0x1F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xF0, 0xFF, 0xFF}  // birdMask14.png
  },
  {
    {0xFF, 0x7F, 0x1F, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x0F, 0xFF, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE}, // birdMask20.png
    {0xFF, 0x3F, 0x1F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xF1, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8}, // birdMask21.png
    {0xFF, 0x1F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xF8, 0xFF}, // birdMask22.png
    {0xFF, 0x3F, 0x07, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xFF}, // birdMask23.png
    {0xFF, 0xFF, 0x1F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xF0, 0xFF, 0xFF}  // birdMask24.png
  }
};

const uint8_t numberBitmap[10][(8 * 8) / 8] PROGMEM = {
  {0x80, 0xBE, 0xA2, 0xA2, 0xBE, 0x80, 0xFF, 0xFF}, // number0.png
  {0xFF, 0xFF, 0xFF, 0x80, 0xBE, 0x80, 0xFF, 0xFF}, // number1.png
  {0x80, 0xBA, 0xAA, 0xAA, 0xAE, 0x80, 0xFF, 0xFF}, // number2.png
  {0x80, 0xAA, 0xAA, 0xAA, 0xBE, 0x80, 0xFF, 0xFF}, // number3.png
  {0xE0, 0xEE, 0xE8, 0x88, 0xBE, 0x80, 0xFF, 0xFF}, // number4.png
  {0x80, 0xAE, 0xAA, 0xAA, 0xBA, 0x80, 0xFF, 0xFF}, // number5.png
  {0x80, 0xBE, 0xAA, 0xAA, 0xBA, 0x80, 0xFF, 0xFF}, // number6.png
  {0xF8, 0xFA, 0xFA, 0x82, 0xBE, 0x80, 0xFF, 0xFF}, // number7.png
  {0x80, 0xBE, 0xAA, 0xAA, 0xBE, 0x80, 0xFF, 0xFF}, // number8.png
  {0x80, 0xAE, 0xAA, 0xAA, 0xBE, 0x80, 0xFF, 0xFF}  // number9.png
};

const uint8_t numberMaskBitmap[10][(8 * 8) / 8] PROGMEM = {
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask0.png
  {0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask1.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask2.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask3.png
  {0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask4.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask5.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask6.png
  {0xF8, 0xF8, 0xF8, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask7.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}, // numberMask8.png
  {0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF}  // numberMask9.png
};

const uint8_t numberScoreBitmap[10][(8 * 16) / 8] PROGMEM = {
  {0x00, 0xFE, 0xFE, 0x86, 0xFE, 0xFE, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore0.png
  {0xFF, 0xFF, 0xF0, 0x06, 0xFE, 0xFE, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFC, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore1.png
  {0x00, 0xF6, 0xF6, 0xB6, 0xBE, 0xBE, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore2.png
  {0x00, 0xB6, 0xB6, 0xB6, 0xFE, 0xFE, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore3.png
  {0x00, 0x7E, 0x7E, 0x60, 0xFE, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0xFE, 0xFC, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore4.png
  {0x00, 0xBE, 0xBE, 0xB6, 0xF6, 0xF6, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore5.png
  {0x00, 0xFE, 0xFE, 0xB6, 0xF6, 0xF6, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore6.png
  {0xC0, 0x9E, 0x9E, 0x06, 0xFE, 0xFE, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFC, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore7.png
  {0x00, 0xFE, 0xFE, 0xB6, 0xFE, 0xFE, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}, // numberScore8.png
  {0x00, 0xBE, 0xBE, 0xB6, 0xFE, 0xFE, 0x00, 0x01, 0xFC, 0xF9, 0xF9, 0xF9, 0xF9, 0xF9, 0xF8, 0xF8}  // numberScore9.png
};

const uint8_t numberScoreMaskBitmap[10][(8 * 16) / 8] PROGMEM = {
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask0.png
  {0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask1.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask2.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask3.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0xFE, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask4.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask5.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask6.png
  {0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask7.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}, // numberScoreMask8.png
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8}  // numberScoreMask9.png
};

const uint8_t landBitmap[(128 * 8) / 8] PROGMEM = { // land.png
  0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE,
  0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2,
  0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0,
  0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC,
  0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE,
  0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2,
  0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0,
  0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC,
  0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE,
  0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2,
  0xF0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0,
  0xF8, 0xFC, 0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC,
  0xFE, 0xFE, 0xF6, 0xF2, 0xF0, 0xF0, 0xF8, 0xFC
};

const uint8_t landMaskBitmap[(128 * 8) / 8] PROGMEM = { // landMask.png
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
};

const uint8_t medalBitmap[4][(32 * 32) / 8] PROGMEM = {
  { // medalBronze.png
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x9F, 0xEF, 0xF7, 0x7B,
    0xBD, 0xDD, 0xDE, 0xEE, 0xEE, 0x2E, 0xCE, 0xEE, 0xEE, 0x5D,
    0xBD, 0x7B, 0xF7, 0xEF, 0x9F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x1F, 0x47,
    0xB8, 0xBB, 0xBB, 0x9B, 0x6B, 0x77, 0x7F, 0x6E, 0x55, 0xAB,
    0xAB, 0xAA, 0xAB, 0xC8, 0xE3, 0x7F, 0x1F, 0xC0, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xBF,
    0x7F, 0xFE, 0x3C, 0xB9, 0x33, 0xF3, 0x27, 0xA7, 0x27, 0xE7,
    0x27, 0x67, 0xE7, 0x33, 0xF3, 0xB9, 0xBC, 0x3E, 0xFF, 0x3F,
    0xBF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xF8, 0xFA, 0xFD, 0xFF, 0xF8, 0xFE, 0xF9, 0xFF, 0xF8, 0xFB,
    0xF8, 0xFF, 0xF8, 0xFF, 0xFC, 0xF8, 0xFF, 0xF9, 0xFA, 0xFB,
    0xFF, 0xF8, 0xFA, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF
  },
  { // medalSilver.png
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x9F, 0xEF, 0xF7, 0x7B,
    0xBD, 0xDD, 0xDE, 0xEE, 0xEE, 0x2E, 0xCE, 0xEE, 0xEE, 0x5D,
    0xBD, 0x7B, 0xF7, 0xEF, 0x9F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x1F, 0x47,
    0xB8, 0xBB, 0xBB, 0x9B, 0x6B, 0x77, 0x7F, 0x6E, 0x55, 0xAB,
    0xAB, 0xAA, 0xAB, 0xC8, 0xE3, 0x7F, 0x1F, 0xC0, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F,
    0xBF, 0xBE, 0xFC, 0x39, 0xF3, 0x33, 0xE7, 0xE7, 0xE7, 0x27,
    0xE7, 0x27, 0xE7, 0x33, 0xB3, 0xB9, 0xFC, 0x3E, 0xBF, 0x3F,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFA, 0xFA, 0xF8, 0xFF, 0xF8, 0xFF, 0xF8, 0xFB, 0xFB,
    0xFF, 0xFC, 0xFB, 0xFC, 0xFF, 0xF8, 0xFA, 0xFA, 0xFF, 0xF8,
    0xFE, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  },
  { // medalGold.png
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x9F, 0xEF, 0xF7, 0x7B,
    0xBD, 0xDD, 0xDE, 0xEE, 0xEE, 0x2E, 0xCE, 0xEE, 0xEE, 0x5D,
    0xBD, 0x7B, 0xF7, 0xEF, 0x9F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x1F, 0x47,
    0xB8, 0xBB, 0xBB, 0x9B, 0x6B, 0x77, 0x7F, 0x6E, 0x55, 0xAB,
    0xAB, 0xAA, 0xAB, 0xC8, 0xE3, 0x7F, 0x1F, 0xC0, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFE, 0x3C, 0xB9, 0xB3, 0xF3, 0x27, 0xA7, 0x27, 0xE7,
    0x27, 0xE7, 0xE7, 0xF3, 0x33, 0xB9, 0x7C, 0xFE, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xFB, 0xF8, 0xFF, 0xF8, 0xFB,
    0xF8, 0xFF, 0xF8, 0xFB, 0xFB, 0xFF, 0xF8, 0xFB, 0xFC, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  },
  { // medalPlatinum.png
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x9F, 0xEF, 0xF7, 0x7B,
    0xBD, 0xDD, 0xDE, 0xEE, 0xEE, 0x2E, 0xCE, 0xEE, 0xEE, 0x5D,
    0xBD, 0x7B, 0xF7, 0xEF, 0x9F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x1F, 0x47,
    0xB8, 0xBB, 0xBB, 0x9B, 0x6B, 0x77, 0x7F, 0x6E, 0x55, 0xAB,
    0xAB, 0xAA, 0xAB, 0xC8, 0xE3, 0x7F, 0x1F, 0xC0, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xBF, 0x3F, 0xFF, 0x3F, 0xFF,
    0xFF, 0xFE, 0x3C, 0xB9, 0x33, 0xF3, 0xA7, 0x27, 0xA7, 0xE7,
    0x27, 0xE7, 0x27, 0x73, 0xF3, 0x39, 0xFC, 0x3E, 0xFF, 0x3F,
    0xFF, 0x3F, 0xBF, 0x3F, 0xBF, 0x3F, 0xF8, 0xFE, 0xFE, 0xFF,
    0xF8, 0xFB, 0xFB, 0xFF, 0xF8, 0xFE, 0xF8, 0xFF, 0xFF, 0xF8,
    0xFF, 0xFF, 0xF8, 0xFF, 0xF8, 0xFF, 0xFC, 0xF8, 0xFF, 0xF8,
    0xFB, 0xF8, 0xFF, 0xF8, 0xFF, 0xFC, 0xFF, 0xF8
  }
};

const uint8_t pipeUpBitmap[(16 * 32) / 8] PROGMEM = { // pipeUp.png
  0xFF, 0x00, 0xAA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x55, 0xAA,
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAA, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0xAA, 0x00, 0x00, 0x00, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0xAA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x55, 0xAA, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x20,
  0x72, 0x77, 0x77, 0x77, 0x27, 0x53, 0x25, 0x52, 0x20, 0x00,
  0x00, 0x07, 0xFF, 0xFF
};

const uint8_t pipeUpMaskBitmap[(16 * 32) / 8] PROGMEM = { // pipeUpMask.png
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xFF, 0xFF
};

const uint8_t pipeDownBitmap[(16 * 32) / 8] PROGMEM = { // pipeDown.png
  0xE0, 0x04, 0x4E, 0xEE, 0xEE, 0xEE, 0xE4, 0xCA, 0xA4, 0x4A,
  0x04, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x55, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xAA, 0x55, 0x00, 0x00, 0x00, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xAA, 0x55, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
  0x55, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xAA, 0x55, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF
};

const uint8_t pipeDownMaskBitmap[(16 * 32) / 8] PROGMEM = { // pipeDownMask.png
  0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFF, 0xFF, 0xFF
};

const uint8_t newBitmap[(16 * 8) / 8] PROGMEM = { // new.png
  0x80, 0xBE, 0x84, 0x88, 0xBE, 0x80, 0xBE, 0xAA, 0xAA, 0x80, 0x9E, 0xA0, 0x9C, 0xA0, 0x9E, 0x80
};

class FlappyBird : public Game {
  private:
    typedef enum {
      SOUND_NONE,
      SOUND_DIE,
      SOUND_SCORE,
      SOUND_SCORE_NEXT,
      SOUND_VOLUME
    } SoundType;

    typedef enum {
      GAME_MODE_TITLE,
      GAME_MODE_GET_READY,
      GAME_MODE_PLAY,
      GAME_MODE_GAME_OVER
    } GameMode;

    typedef enum {
      MEDAL_BRONZE,
      MEDAL_SILVER,
      MEDAL_GOLD,
      MEDAL_PLATINUM
    } MedalType;

    // game
    int gameMode;
    float gameOverVelocity;
    Point gameOverPosition;
    bool isGameOver;
    bool isCheckHighScore;
    float titleTime;
    float getReadyTime;
    float gameOverTime;
    bool isAutoPlay;

    // bird
    Size birdSize;
    float birdAnimationSpeed;
    float birdFrame;
    float birdDegrees;
    int birdFirstFrame;
    int birdFrameDirection;
    bool isDropping;
    float heightRatio;
    float gravity;
    float velocity;
    float initialVelocity;
    Point birdPosition;
    float dropPosition;
    bool isHit;
    Point birdCollisionOffset;

    // land
    Size landSize;
    float landSpeed;
    Point landOffset;
    float landPosition;

    // score
    bool isNewHighScore;
    Point scorePosition[3];
    const uint8_t* scoreDigitImage[3];
    const uint8_t* scoreDigitMaskImage[3];

    // score panel
    float maxScorePanelOffset;
    float scorePanelOffset;
    float scorePanelScore;
    float scorePanelHighScore;
    const uint8_t* scorePanelHighScoreDigitImage[3];
    const uint8_t* scorePanelScoreDigitImage[3];
    const uint8_t* scorePanelMedalImage;

    // pipe
    Size pipeSize;
    int pipeMinLength;
    int heightBetweenPipes;
    static const int numberOfPipes = 3;
    int pipeRandomFrom;
    int pipeRandomTo;
    Point pipePosition[numberOfPipes];
    bool isPipeVisibled[numberOfPipes];
    bool isPipeEnabled[numberOfPipes];
    float pipeRandomFirstTime;
    float pipeRandomNextTime;
    float pipeRandomTime;

    void addScore(int value);
    void changeGameMode(int mode);
    void checkHighScore();
    bool isHitPipe();
    void jump();
    void playSound(int index);
    void pressButton();
    void resetBird();
    void resetGame();
    void setScoreImages();
    void setScorePanelImages(const uint8_t* digitImage[3], int value);
    void updateBirdAnimation(bool rotate);

  public:
    FlappyBird();
    bool isBackToMenuEnabled();
    void update();
    void render();
};
}

#endif
